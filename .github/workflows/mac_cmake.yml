name: MacOS Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - {"os": macos-13, short: mac-amd64, compiler: clang, shell: bash}
          - {"os": macos-latest, short: mac-arm64, compiler: clang, shell: bash}

    runs-on: ${{matrix.os}}

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    defaults:
      run:
        shell: '${{ matrix.shell }} {0}'

    steps:
      - uses: actions/checkout@v4

      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 'f7423ee180c4b7f40d43402c2feb3859161ef625'

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install nasm on Mac
        run: brew install nasm

      - name: Configure CMake
        run: cmake --preset ${{matrix.short}}-${{matrix.compiler}}-release

      - name: Print error messages from build
        if: failure()
        run: |
          cat /Users/runner/work/ffmpeg_wrapper/ffmpeg_wrapper/vcpkg/buildtrees/ffmpeg/build-x64-osx-dynamic-rel-config.log
          cat /Users/runner/work/ffmpeg_wrapper/ffmpeg_wrapper/vcpkg/buildtrees/ffmpeg/build-x64-osx-dynamic-rel-err.log

      - name: Build
        run: cmake --build --preset ${{matrix.short}}-${{matrix.compiler}}-release

      - name: Test
        id: test
        continue-on-error: true
        run: |
          ctest --verbose -LE "GPU_TEST" --preset ${{matrix.short}}-${{matrix.compiler}}-release -C ${{matrix.short}}-${{matrix.compiler}}-release
          echo "::set-output name=RESULT::$?"
        working-directory: ${{ github.workspace }}

      - name: Install
        id: install
        continue-on-error: true
        run: |
          cmake --build --preset ${{matrix.short}}-${{matrix.compiler}}-release --target install
          echo "::set-output name=RESULT::$?"

      - name: Report Install Result
        run: echo "Install step finished with exit code ${{ steps.install.outputs.RESULT }}"

      - name: Report Test Result
        run: echo "Test step finished with exit code ${{ steps.test.outputs.RESULT }}"